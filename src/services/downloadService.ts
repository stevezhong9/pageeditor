import JSZip from 'jszip';
import { saveAs } from 'file-saver';
import { PageLayout, BrandConfig } from '../types/schema';

interface DownloadOptions {
  includeSources?: boolean;
  includeAssets?: boolean;
  format?: 'html' | 'react';
}

export class DownloadService {
  
  /**
   * 生成完整的HTML页面代码
   */
  static generateHTMLPage(layout: PageLayout, brandConfig: BrandConfig): string {
    const html = `<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${layout.hero.headline} - ${brandConfig.name}</title>
    <meta name="description" content="${layout.hero.subhead}">
    
    <!-- SEO Meta Tags -->
    <meta property="og:title" content="${layout.hero.headline}">
    <meta property="og:description" content="${layout.hero.subhead}">
    <meta property="og:image" content="${layout.hero.image}">
    <meta property="og:type" content="website">
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="./assets/favicon.ico">
    
    <!-- Styles -->
    <link rel="stylesheet" href="./assets/styles.css">
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=${brandConfig.font}:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="page-container">
        <!-- Hero Section -->
        <section class="hero-section">
            <div class="hero-content">
                <div class="hero-text">
                    <h1 class="hero-headline">${layout.hero.headline}</h1>
                    <p class="hero-subhead">${layout.hero.subhead}</p>
                    <button class="hero-cta" onclick="handleCTAClick()">${layout.hero.cta}</button>
                </div>
                <div class="hero-image">
                    <img src="${layout.hero.image}" alt="产品展示" loading="lazy">
                </div>
            </div>
        </section>

        <!-- USP Section -->
        <section class="usp-section">
            <div class="container">
                <h2 class="section-title">核心优势</h2>
                <div class="usp-grid">
                    ${layout.usps.map(usp => `
                    <div class="usp-item">
                        <div class="usp-icon">${usp.icon}</div>
                        <div class="usp-text">${usp.text}</div>
                    </div>
                    `).join('')}
                </div>
            </div>
        </section>

        ${layout.specs && layout.specs.length > 0 ? `
        <!-- Specs Section -->
        <section class="specs-section">
            <div class="container">
                <h2 class="section-title">产品规格</h2>
                <div class="specs-grid">
                    ${layout.specs.map(spec => `
                    <div class="spec-item">
                        <span class="spec-key">${spec.k}</span>
                        <span class="spec-value">${spec.v}</span>
                    </div>
                    `).join('')}
                </div>
            </div>
        </section>
        ` : ''}

        ${layout.faq && layout.faq.length > 0 ? `
        <!-- FAQ Section -->
        <section class="faq-section">
            <div class="container">
                <h2 class="section-title">常见问题</h2>
                <div class="faq-list">
                    ${layout.faq.map((item, index) => `
                    <div class="faq-item" onclick="toggleFAQ(${index})">
                        <div class="faq-question">
                            <span>${item.q}</span>
                            <span class="faq-toggle">+</span>
                        </div>
                        <div class="faq-answer" id="faq-${index}">
                            <p>${item.a}</p>
                        </div>
                    </div>
                    `).join('')}
                </div>
            </div>
        </section>
        ` : ''}

        ${layout.offer ? `
        <!-- Offer Section -->
        <section class="offer-section">
            <div class="container">
                ${layout.offer.badge ? `<div class="offer-badge">${layout.offer.badge}</div>` : ''}
                ${layout.offer.expiresAt ? `<p class="offer-expires">优惠截止：${new Date(layout.offer.expiresAt).toLocaleDateString()}</p>` : ''}
            </div>
        </section>
        ` : ''}

        <!-- Footer -->
        <footer class="footer">
            <div class="container">
                <p>&copy; 2024 ${brandConfig.name}. All rights reserved.</p>
                <p class="powered-by">Generated by <a href="https://claude.ai/code" target="_blank">Claude Code Page Editor</a></p>
            </div>
        </footer>
    </div>

    <!-- Scripts -->
    <script src="./assets/scripts.js"></script>
    
    <!-- Analytics (Optional) -->
    <script>
        // Add your analytics code here
        console.log('Landing page loaded successfully');
        
        // Track page view
        if (typeof gtag !== 'undefined') {
            gtag('event', 'page_view', {
                page_title: '${layout.hero.headline}',
                page_location: window.location.href
            });
        }
    </script>
</body>
</html>`;
    
    return html;
  }

  /**
   * 生成CSS样式文件
   */
  static generateCSS(brandConfig: BrandConfig): string {
    return `/* Landing Page Styles - Generated by Claude Code Page Editor */

:root {
    --primary-color: ${brandConfig.colors.primary};
    --accent-color: ${brandConfig.colors.accent};
    --font-family: '${brandConfig.font}', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    --max-width: 1200px;
    --border-radius: 12px;
    --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    --transition: all 0.3s ease;
}

/* Reset and Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: var(--font-family);
    line-height: 1.6;
    color: #333;
    background-color: #ffffff;
}

.container {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 2rem;
}

/* Typography */
.section-title {
    font-size: 2.5rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 3rem;
    color: var(--primary-color);
}

/* Hero Section */
.hero-section {
    padding: 4rem 0;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    min-height: 80vh;
    display: flex;
    align-items: center;
}

.hero-content {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 2rem;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
}

.hero-headline {
    font-size: 3rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 1.5rem;
    line-height: 1.2;
}

.hero-subhead {
    font-size: 1.25rem;
    color: #6b7280;
    margin-bottom: 2rem;
    line-height: 1.6;
}

.hero-cta {
    background: var(--accent-color);
    color: white;
    border: none;
    padding: 1rem 2rem;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: var(--transition);
    box-shadow: var(--shadow);
}

.hero-cta:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
}

.hero-image img {
    width: 100%;
    height: 400px;
    object-fit: cover;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow);
}

/* USP Section */
.usp-section {
    padding: 6rem 0;
    background: white;
}

.usp-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
}

.usp-item {
    text-align: center;
    padding: 2rem;
    background: #f8fafc;
    border-radius: var(--border-radius);
    transition: var(--transition);
    border: 1px solid #e2e8f0;
}

.usp-item:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow);
}

.usp-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    display: block;
}

.usp-text {
    font-size: 1rem;
    font-weight: 500;
    color: #374151;
}

/* Specs Section */
.specs-section {
    padding: 6rem 0;
    background: #f8fafc;
}

.specs-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
}

.spec-item {
    display: flex;
    justify-content: space-between;
    padding: 1.5rem;
    background: white;
    border-radius: var(--border-radius);
    border: 1px solid #e2e8f0;
}

.spec-key {
    font-weight: 600;
    color: #374151;
}

.spec-value {
    color: #6b7280;
}

/* FAQ Section */
.faq-section {
    padding: 6rem 0;
    background: white;
}

.faq-list {
    max-width: 800px;
    margin: 0 auto;
}

.faq-item {
    border: 1px solid #e2e8f0;
    border-radius: var(--border-radius);
    margin-bottom: 1rem;
    overflow: hidden;
    cursor: pointer;
    transition: var(--transition);
}

.faq-item:hover {
    box-shadow: var(--shadow);
}

.faq-question {
    padding: 1.5rem;
    background: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: 600;
    color: #374151;
}

.faq-toggle {
    font-size: 1.5rem;
    color: var(--primary-color);
    transition: var(--transition);
}

.faq-answer {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
    background: #f8fafc;
}

.faq-answer.active {
    max-height: 200px;
}

.faq-answer p {
    padding: 1.5rem;
    color: #6b7280;
}

/* Offer Section */
.offer-section {
    padding: 3rem 0;
    background: linear-gradient(135deg, var(--accent-color), var(--primary-color));
    color: white;
    text-align: center;
}

.offer-badge {
    display: inline-block;
    background: rgba(255, 255, 255, 0.2);
    padding: 0.5rem 1rem;
    border-radius: 50px;
    font-weight: 600;
    margin-bottom: 1rem;
}

.offer-expires {
    opacity: 0.9;
}

/* Footer */
.footer {
    padding: 3rem 0;
    background: #1f2937;
    color: white;
    text-align: center;
}

.powered-by {
    margin-top: 1rem;
    opacity: 0.7;
    font-size: 0.875rem;
}

.powered-by a {
    color: var(--accent-color);
    text-decoration: none;
}

/* Responsive Design */
@media (max-width: 768px) {
    .hero-content {
        grid-template-columns: 1fr;
        gap: 2rem;
        text-align: center;
    }
    
    .hero-headline {
        font-size: 2rem;
    }
    
    .section-title {
        font-size: 2rem;
    }
    
    .container {
        padding: 0 1rem;
    }
    
    .usp-grid {
        grid-template-columns: 1fr;
    }
    
    .specs-grid {
        grid-template-columns: 1fr;
    }
}

/* Loading Animation */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.fade-in-up {
    animation: fadeInUp 0.8s ease-out;
}`;
  }

  /**
   * 生成JavaScript文件
   */
  static generateJS(): string {
    return `// Landing Page JavaScript - Generated by Claude Code Page Editor

// DOM Content Loaded
document.addEventListener('DOMContentLoaded', function() {
    console.log('Landing page initialized');
    
    // Add fade-in animation to elements
    const elements = document.querySelectorAll('.hero-section, .usp-section, .specs-section, .faq-section');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('fade-in-up');
            }
        });
    }, { threshold: 0.1 });
    
    elements.forEach(el => observer.observe(el));
});

// FAQ Toggle Function
function toggleFAQ(index) {
    const answer = document.getElementById(\`faq-\${index}\`);
    const toggle = answer.previousElementSibling.querySelector('.faq-toggle');
    
    if (answer.classList.contains('active')) {
        answer.classList.remove('active');
        toggle.textContent = '+';
    } else {
        // Close all other FAQs
        document.querySelectorAll('.faq-answer').forEach(item => {
            item.classList.remove('active');
        });
        document.querySelectorAll('.faq-toggle').forEach(item => {
            item.textContent = '+';
        });
        
        // Open current FAQ
        answer.classList.add('active');
        toggle.textContent = '−';
    }
}

// CTA Click Handler
function handleCTAClick() {
    // Track conversion event
    console.log('CTA clicked');
    
    // Add your conversion tracking code here
    if (typeof gtag !== 'undefined') {
        gtag('event', 'conversion', {
            event_category: 'engagement',
            event_label: 'hero_cta_click',
            value: 1
        });
    }
    
    // You can add redirect logic here
    // window.location.href = 'https://your-purchase-page.com';
    
    // Or show a modal/form
    alert('感谢您的关注！请联系我们获取更多信息。');
}

// Smooth Scroll for Anchor Links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    });
});

// Form Validation (if you add forms)
function validateForm(form) {
    const requiredFields = form.querySelectorAll('[required]');
    let isValid = true;
    
    requiredFields.forEach(field => {
        if (!field.value.trim()) {
            field.classList.add('error');
            isValid = false;
        } else {
            field.classList.remove('error');
        }
    });
    
    return isValid;
}

// Performance Optimization - Lazy Loading Images
if ('IntersectionObserver' in window) {
    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.classList.remove('lazy');
                imageObserver.unobserve(img);
            }
        });
    });
    
    document.querySelectorAll('img[data-src]').forEach(img => {
        imageObserver.observe(img);
    });
}`;
  }

  /**
   * 生成README文件
   */
  static generateReadme(layout: PageLayout, brandConfig: BrandConfig): string {
    return `# ${layout.hero.headline}

${layout.hero.subhead}

## 项目说明

这是一个由 [Claude Code Page Editor](https://claude.ai/code) 生成的导购页面项目。

### 文件结构

\`\`\`
landing-page/
├── index.html          # 主页面文件
├── assets/
│   ├── styles.css      # 样式文件
│   ├── scripts.js      # 交互脚本
│   └── favicon.ico     # 网站图标
└── README.md           # 项目说明
\`\`\`

### 快速开始

1. 解压zip文件到您的项目目录
2. 使用本地服务器打开 \`index.html\`
3. 根据需要修改内容和样式

### 本地开发服务器

\`\`\`bash
# 使用 Python (推荐)
python -m http.server 8000

# 使用 Node.js
npx http-server

# 使用 PHP
php -S localhost:8000
\`\`\`

然后在浏览器中访问 \`http://localhost:8000\`

### 自定义配置

#### 品牌配色
- 主色调: ${brandConfig.colors.primary}
- 强调色: ${brandConfig.colors.accent}
- 字体: ${brandConfig.font}

#### 页面内容
- 标题: ${layout.hero.headline}
- 副标题: ${layout.hero.subhead}
- 行动按钮: ${layout.hero.cta}
- 核心卖点: ${layout.usps.length} 个

### 部署建议

#### 静态托管平台
- [Vercel](https://vercel.com/) - 推荐
- [Netlify](https://netlify.com/)
- [GitHub Pages](https://pages.github.com/)
- [Cloudflare Pages](https://pages.cloudflare.com/)

#### 服务器部署
- 上传所有文件到服务器根目录
- 确保 \`index.html\` 为默认首页
- 配置HTTPS和缓存策略

### SEO优化

页面已包含基础SEO元素：
- Meta描述和关键词
- Open Graph标签
- 语义化HTML结构
- 图片Alt标签

### 转换追踪

在 \`scripts.js\` 中添加您的分析代码：
- Google Analytics
- Facebook Pixel
- 其他追踪工具

### 技术支持

如需技术支持或定制开发，请联系：
- 邮箱: support@example.com
- 电话: 400-000-0000

### 许可证

© 2024 ${brandConfig.name}. All rights reserved.

---

*由 [Claude Code Page Editor](https://claude.ai/code) 自动生成*
`;
  }

  /**
   * 下载导购页ZIP包
   */
  static async downloadLandingPage(
    layout: PageLayout, 
    brandConfig: BrandConfig, 
    options: DownloadOptions = {}
  ): Promise<void> {
    try {
      const zip = new JSZip();
      
      // 生成文件内容
      const html = this.generateHTMLPage(layout, brandConfig);
      const css = this.generateCSS(brandConfig);
      const js = this.generateJS();
      const readme = this.generateReadme(layout, brandConfig);
      
      // 添加主要文件
      zip.file('index.html', html);
      zip.file('README.md', readme);
      
      // 创建assets目录
      const assets = zip.folder('assets');
      if (assets) {
        assets.file('styles.css', css);
        assets.file('scripts.js', js);
        
        // 添加favicon（base64编码的小图标）
        const faviconData = 'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAdgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANCSURBVFiFtZc7SCNBFIB/YzQaC1sLwcJCG1sLG1sLbSy0tbCwsLGwsLCwsLGwsLCwsLCwsLGwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw';
        assets.file('favicon.ico', faviconData, { base64: true });
      }
      
      // 如果需要包含源文件
      if (options.includeSources) {
        const sources = zip.folder('sources');
        if (sources) {
          sources.file('page-data.json', JSON.stringify({ layout, brandConfig }, null, 2));
          sources.file('brand-config.json', JSON.stringify(brandConfig, null, 2));
        }
      }
      
      // 生成ZIP文件
      const content = await zip.generateAsync({ 
        type: 'blob',
        compression: 'DEFLATE',
        compressionOptions: { level: 9 }
      });
      
      // 生成文件名
      const timestamp = new Date().toISOString().slice(0, 16).replace(/[:-]/g, '');
      const filename = `landing-page-${brandConfig.name.toLowerCase().replace(/\s+/g, '-')}-${timestamp}.zip`;
      
      // 下载文件
      saveAs(content, filename);
      
      console.log('Landing page downloaded successfully:', filename);
      
    } catch (error) {
      console.error('Failed to download landing page:', error);
      throw new Error('下载失败: ' + (error instanceof Error ? error.message : '未知错误'));
    }
  }
}